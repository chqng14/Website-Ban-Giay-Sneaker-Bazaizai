@using App_Data.ViewModels.KhuyenMaiChiTietDTO;
@using App_Data.ViewModels.SanPhamChiTietViewModel;
@using App_View.IServices;
@inject ISanPhamChiTietService sanPhamChiTietService;
@foreach (var spSale in Model)
{
    var spct = ((List<ItemShopViewModel>)ViewBag.lstSpct).FirstOrDefault(x => x.IdChiTietSp == spSale.IdSanPhamChiTiet);
    <li class="mCTLtQ qn2FlY"
        style="width: 16.67%;">
        <a href="@Url.Action("Details","SanPhamChiTiets",new{id= spSale.IdSanPhamChiTiet})"
           data-sqe="link" class="sgdCbK">
            <div class="Wj2E1T LHzHhr n98Hr6">
                <div class="Wc6Tex">
                    <div class="_58HtDH">
                        <picture class="JEjj5L">
                            <img data-is-lazy-load-bg-image="false"
                                 data-use-image-server="false"
                                 class="lazyload Mq2X5q"
                                 loading="lazy"
                                 src="/AnhSanPham/@spct.Anh"
                                 alt=$"{@spct.TenSanPham}">
                        </picture>
                    </div>
                    <div class="mwCb8P">
                        <div class="l6i7Zv">
                            @{
                                var giamGia = 100 - ((spct.GiaThucTe / spct.GiaGoc) * 100);
                                if (spct.GiaThucTe == 0)
                                {
                                    giamGia = 100;
                                }
                                var roundedGiamGia = (int)Math.Round(Convert.ToDouble(giamGia));
                            }
                            <span class="O2ltJ8">-@roundedGiamGia%</span>
                        </div>
                    </div>

                </div>
                <div class="NryQg2">
                    <div class="RGjY0m">
                        <div aria-hidden="true"
                             class="Y9JWoL laR5TZ">
                            @spct.TenSanPham
                        </div>
                    </div>
                    <div class="iu8isX">
                        <div class="MqK3rf">
                            <div class="_0w738K PrqYGq SlEOxC"
                                 manifest="[object Object]"
                                 aria-hidden="true">

                                @string.Format("{0:N0}đ",@spct.GiaGoc)
                            </div>
                            <div class="_0w738K _5650Ab"
                                 manifest="[object Object]">
                                <span aria-label="current price"></span><span class="yi6wjz yS8ee6"></span><span class="Fh3XjX _2cK8Gd">@string.Format("{0:N0}đ",@spct.GiaThucTe)</span>

                            </div>
                        </div>
                        <div class="l4kljj">
                            <button data-addtocart="{&quot;action&quot;:1,&quot;itemName&quot;:&quot;[ CHÍNH HÃNG - BH12 THÁNG ] Máy giặt mini SAKURA Tự động 100%, giặt, vắt, sấy - Có thể giặt áo khoác lông mùa đông&quot;,&quot;shopid&quot;:460426806,&quot;itemid&quot;:17289290116}"
                                    data-addtocarttracking="{&quot;page_type&quot;:&quot;microsite&quot;,&quot;page_section&quot;:&quot;product_collection&quot;,&quot;target_type&quot;:&quot;add_to_cart_button&quot;,&quot;data&quot;:{&quot;microsite_pageid&quot;:48866,&quot;tracking_msg&quot;:&quot;eyJwYWdlX2luZm8iOnsicGFnZV90cmFjZV9pZCI6IjFmOGExYjg0MDlhNTJhOGQwY2EzYTk4NDcxMDExMjAwIn19&quot;,&quot;md_component_id&quot;:1699246519374,&quot;component_name&quot;:&quot;NewUserZone_  3917424 _ 115&quot;,&quot;component_type&quot;:&quot;33&quot;,&quot;microsite_labelid&quot;:[],&quot;section_location&quot;:9,&quot;collection_id&quot;:3917424,&quot;is_horizontal&quot;:true,&quot;itemid&quot;:17289290116,&quot;shopid&quot;:460426806,&quot;item_location&quot;:0}}"
                                    class="uQynIu h3YISB"></button>
                        </div>
                    </div>
                </div>
            </div>
        </a>
    </li>
}
<div class="mCTLtQ qn2FlY"
     style="width: 16.67%;">
    <div class="_00qJSX kK-mfd">
        <div class="hJ4n7F u4f1Yx">
            <a href="/sanphamchitiets"
               role="button"
               data-is-ssr-see-all-button="false"
               class="tQx6Fj _5Hogue PwG79a _5+DP0m">
                <span class="fB9tKY"
                      style="background: url(&quot;https://deo.shopeemobile.com/shopee/shopee-pcmall-live-sg/micrositefe/e5a3dc5f12dce285ae9dede33ff0ba0c.svg&quot;) center center / contain no-repeat; width: 32px; height: 32px; display: inline-block;"></span><span>
                    Xem
                    tất cả
                </span>
            </a>
        </div>
    </div>
</div>
@section scripts {
    <script>
 
        $(document).ready(function () {
            function createCarouselController(carouselContainer) {
                const prevButton = carouselContainer.querySelector('[data-is-carousel-nav-button="prev"]');
                const nextButton = carouselContainer.querySelector('[data-is-carousel-nav-button="next"]');
                const scrollContainer = carouselContainer.querySelector('[data-horizontal-scroll-container="true"]');

                const containerWidth = scrollContainer.clientWidth;
                const scrollStep = containerWidth / 2;

                // Nút "Next"
                nextButton.addEventListener("click", function () {
                    scrollContainer.scrollLeft += scrollStep;
                    updatePrevButtonVisibility();
                });

                // Nút "Prev"
                prevButton.addEventListener("click", function () {
                    scrollContainer.scrollLeft -= scrollStep;
                    updatePrevButtonVisibility();
                });

                // Cập nhật trạng thái hiển thị của nút "Prev"
                function updatePrevButtonVisibility() {
                    const scrollLeftPosition = scrollContainer.scrollLeft;
                    const visibilityThreshold = 10;

                    if (scrollLeftPosition > visibilityThreshold) {
                        prevButton.style.visibility = "visible";
                    } else {
                        prevButton.style.visibility = "hidden";
                    }
                }

                scrollContainer.addEventListener("scroll", function () {
                    updatePrevButtonVisibility();
                });
                updatePrevButtonVisibility();
            }
            const carouselContainers = document.querySelectorAll('[data-component-id^="1699246519374"]');
            carouselContainers.forEach(function (carouselContainer) {
                createCarouselController(carouselContainer);
            });
        });
    </script>
}