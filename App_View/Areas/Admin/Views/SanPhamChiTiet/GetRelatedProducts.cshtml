@model List<App_Data.ViewModels.SanPhamChiTietViewModel.RelatedProductViewModel>
<style>
    .checkbox input[type="checkbox"] {
        display: none;
    }

    /* Thiết lập kiểu checkbox tùy chỉnh sử dụng giả lập (pseudo-elements) */
    .checkbox label::before {
        content: "\2714"; /* Unicode ký tự checkmark */
        display: inline-block;
        width: 20px;
        height: 20px;
        border: 2px solid #000;
        text-align: center;
        vertical-align: middle;
        margin-right: 5px;
        font-size: 18px;
        line-height: 18px;
        cursor: pointer;
    }

    /* Định dạng khi checkbox được chọn */
    .checkbox input[type="checkbox"]:checked + label::before {
        background-color: #00FF00; /* Màu nền khi đã chọn */
    }

    /* Định dạng khi checkbox chưa được chọn */
    .checkbox input[type="checkbox"]:not(:checked) + label::before {
        background-color: #c4d0d9; /* Màu nền khi chưa chọn */
    }

    .editable-price {
        position: relative;
    }

    .editable-soluong {
        position: relative;
    }

    .editable-price .display-price,
    .editable-price .edit-price {
        width: 100%;
        padding: 8px;
        box-sizing: border-box;
    }

    .editable-soluong .display-soluong,
    .editable-soluong .edit-soluong {
        width: 100%;
        padding: 8px;
        box-sizing: border-box;
    }

    .editable-price .edit-price {
        display: none;
    }

    .editable-soluong .edit-soluong {
        display: none;
    }
</style>
<div class="d-flex justify-content-end m-b-10">
    <button id="btnUpdate" class="btn btn-outline-primary m-r-5" style="display: none;">
        <i class="anticon anticon-loading m-r-5"></i>
        <i class="anticon anticon-tool m-r-5"></i>
        <span>Update</span>
    </button>
</div>
<div class="notification-toast top-right" id="notification-toast"></div>

<table id="data-table" class="table table-hover no-footer">
    <thead>
        <tr>
            <th style="width: 30px">STT</th>
            <th>Mã SP</th>
            <th>Sản phẩm</th>
            <th>Màu</th>
            <th>Kích cỡ</th>
            <th>Giá nhập</th>
            <th>Giá bán</th>
            <th>SL</th>
            <th>KL</th>
            <th>Đã bán</th>
            <th>
                @*<div class="checkbox"><input id="check-all" type="checkbox"><label for="check-all" class="m-b-0"></label></div>*@
                Select
            </th>
            <th>###</th>
        </tr>
    </thead>
    <tbody>
        @{
            int Stt = 1;
        }
        @foreach (var item in Model)
        {
            <tr>
                <td style="width: 30px">@(Stt++)</td>
                <td>@item.MaSanPham</td>
                <td>
                    <div class="d-flex align-items-center" style="cursor: pointer" onclick="showModal('@item.IdSanPham')">
                        <img class="img-fluid rounded" src="/AnhSanPham/@item.Anh" style="max-width: 60px" alt="">
                        <h6 class="m-b-0 m-l-10">@item.SanPham</h6>
                    </div>
                </td>
                <td>@item.MauSac</td>
                <td>@item.KichCo</td>
                <td>@string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", item.GiaNhap)</td>
                <td>
                    <div class="editable-price">
                        <span class="display-price">@string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", item.GiaBan)</span>
                        <input class="edit-price form-control formatPrice-table" value="@item.GiaBan" style="display:none;" />
                    </div>
                </td>
                <td>
                    <div class="editable-soluong">
                        <span class="display-soluong">@item.SoLuong</span>
                        <input type="text" class="edit-soluong form-control" value="@item.SoLuong" style="display:none;" />
                    </div>
                </td>
                <td>@item.KhoiLuong</td>
                <td>@item.SoLuongDaBan</td>
                <td><div class="checkbox" data-id="@item.IdSanPham"><input id="check-item-@item.IdSanPham" type="checkbox" class="item"><label for="check-item-@item.IdSanPham" class="m-b-0"></label></div></td>
                <td>
                    <div class="btn-group">
                        <button class="btn btn-default"><i class="anticon anticon-delete"></i></button>
                        <button class="btn btn-default"><i class="anticon anticon-delete"></i></button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
    <tfoot style="
    background: #6de0d8;
">
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
        </tr>
    </tfoot>

</table>

<script>
    $(() => {
        var checkboxStates = [];
        var selectedProducts = [];

        $('#btnUpdate').on('click', function () {
            const btn = $(this);
            btn.addClass('is-loading');
            $('#data-table tbody input[type="checkbox"].item:checked').each(function () {
                var row = $(this).closest('tr');
                var idSanPham = row.find('.checkbox').data('id');
                var giaBan = parseFloat(row.find('.editable-price .edit-price').val().replace(/[^\d.-]/g, '')) || 0;
                var soLuong = parseInt(row.find('.editable-soluong .edit-soluong').val(), 10) || 0;
                console.log(idSanPham);
                // Thêm thông tin sản phẩm vào danh sách
                selectedProducts.push({
                    IdProductTableDTO: idSanPham,
                    GiaBan: giaBan,
                    SoLuongTon: soLuong
                });



            });
            soLuongUpdate = selectedProducts.length;
            var data = {
                "SanPhamTablesDTOs": selectedProducts,
            };
            $.ajax({
                url: '/Admin/SanPhamChiTiet/UpdateLstSanPhamTable',
                type: 'POST',
                data: JSON.stringify(data),
                contentType: 'application/json',
                success: function (result) {
                    if (result) {
                        btn.removeClass('is-loading')
                        $.ajax({
                            url: '/Admin/SanPhamChiTiet/GetRelatedProducts',
                            type: 'GET',
                            data: {
                                "sumGuid": keyProduct
                            },
                            success: function (result) {
                                $('#modal-dssanpham').empty().html(result);
                                $('#exampleModal').modal('show');
                                var toastHTML = `<div class="toast fade hide" data-delay="3000">
                                        <div class="toast-header">
                                            <i class="anticon anticon-info-circle text-primary m-r-5"></i>
                                            <strong class="mr-auto">Thông báo</strong>
                                            <small>1 second ago</small>
                                            <button type="button" class="ml-2 close" data-dismiss="toast" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="toast-body">
                                          Đã cập nhật thành công ${soLuongUpdate} sản phẩm!
                                        </div>
                                    </div>`
                                $('#notification-toast').append(toastHTML)
                                $('#notification-toast .toast').toast('show');
                                setTimeout(function () {
                                    $('#notification-toast .toast:first-child').remove();
                                }, 3000);
                            },
                            error: function (xhr, status, error) {
                                console.log(xhr.responseText);
                                console.log(status);
                                console.log(error);
                                console.log(xhr);
                            }
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText);
                    console.log(status);
                    console.log(error);
                    console.log(xhr);
                }
            });
            // Hiển thị danh sách sản phẩm và thông tin của chúng trong console
            console.log(selectedProducts);
            selectedProducts = [];

            // Thực hiện các thao tác mong muốn với danh sách sản phẩm
            // Ví dụ: Gửi danh sách sản phẩm lên server để cập nhật dữ liệu
        });

        var table = $('#data-table').DataTable({
            "pageLength": 5,
            "lengthMenu": [5, 10, 25, 50],
            "footerCallback": function (row, data, start, end, display) {
                var api = this.api();

                var totalQuantity = api.column(7, { page: 'current' }).data().reduce(function (a, b) {
                    return a + parseInt($(b).find('.display-soluong').text().replace(/[^\d.-]/g, ''), 10) || 0;
                }, 0);

                var totalSLDaBan = api.column(9, { page: 'current' }).data().reduce(function (a, b) {
                    return a + parseInt(b.replace(/[^\d.-]/g, ''), 10) || 0;
                }, 0);

                var totalSales = api.column(6, { page: 'current' }).data().reduce(function (a, b) {
                    var priceWithoutCurrency = $(b).find('.display-price').text().replace(/[^\d]/g, '');
                    return a + parseFloat(priceWithoutCurrency) || 0;
                }, 0);

                // Tổng số lượng và số lượng đã bán
                $(api.column(7).footer()).html(totalQuantity);
                $(api.column(9).footer()).html(totalSLDaBan);

                // Tổng giá
                $(api.column(6).footer()).html(formatCurrency(totalSales));
            },
            "drawCallback": function (settings) {
                // Kiểm tra xem sự kiện draw.dt đã được gắn chưa
                var drawEvent = $._data($('#data-table')[0], 'events');
                if (!drawEvent || !drawEvent.draw || !drawEvent.draw.length) {
                    // Nếu chưa, thêm sự kiện
                    $('#data-table').on('draw.dt', function () {
                        $(".formatPrice-table").each(function () {
                            var autoNumeric = new AutoNumeric(this, {
                                decimalCharacter: ".",
                                digitGroupSeparator: ",",
                                decimalPlaces: 0,
                                currencySymbol: " ₫",
                                currencySymbolPlacement: "s",
                                minimumValue: 0,
                                maximumValue: 99999999
                            });
                        });
                    });
                }
            }
        });


        $('#data-table tbody').on('click', 'input[type="checkbox"].item', function () {
            var index = $(this).closest('tr').index();
        });

        function saveCheckboxStates() {
            checkboxStates = {};
            $('tbody .item').each(function () {
                var idSanPham = $(this).closest('tr').find('.item').data('id');
                checkboxStates[idSanPham] = $(this).prop('checked');
            });
        }

        function restoreCheckboxStates() {
            $('tbody .item').each(function () {
                var idSanPham = $(this).closest('tr').find('.item').data('id');
                $(this).prop('checked', checkboxStates[idSanPham] || false);
            });
        }

        function setupEditableInputs() {
            var checkboxes = $('tbody .item');
            checkboxes.each(function (index) {
                var row = $(this).closest('tr');
                var priceColumn = row.find('.editable-price');
                var soLuongColumn = row.find('.editable-soluong');

                if ($(this).prop('checked')) {
                    priceColumn.find('.display-price').hide();
                    priceColumn.find('.edit-price').show();

                    soLuongColumn.find('.display-soluong').hide();
                    soLuongColumn.find('.edit-soluong').show();
                } else {
                    priceColumn.find('.display-price').show();
                    priceColumn.find('.edit-price').hide();

                    soLuongColumn.find('.display-soluong').show();
                    soLuongColumn.find('.edit-soluong').hide();
                }
            });
        }

        $('#data-table tbody').on('click', 'input[type="checkbox"].item', function () {
            var row = $(this).closest('tr');
            var checkbox = $(this);
            var priceColumn = row.find('.editable-price');
            var soLuongColumn = row.find('.editable-soluong');

            if (checkbox.prop('checked')) {
                priceColumn.find('.display-price').hide();
                priceColumn.find('.edit-price').show();

                soLuongColumn.find('.display-soluong').hide();
                soLuongColumn.find('.edit-soluong').show();
            } else {
                priceColumn.find('.display-price').show();
                priceColumn.find('.edit-price').hide();

                soLuongColumn.find('.display-soluong').show();
                soLuongColumn.find('.edit-soluong').hide();
            }
        });

        function formatCurrency(value) {
            return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value);
        }

        $('#data-table tbody').on('change', 'input[type="checkbox"].item', function () {
            // Kiểm tra nếu có ít nhất một checkbox được chọn
            var atLeastOneChecked = $('tbody .item:checked').length > 0;

            // Hiển thị hoặc ẩn nút "Update" tùy thuộc vào kết quả kiểm tra
            $('#btnUpdate').toggle(atLeastOneChecked);
        });

    });
</script>

