// <auto-generated />
using System;
using App_Data.DbContextt;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App_Data.Migrations
{
    [DbContext(typeof(BazaizaiContext))]
    [Migration("20230923163515_mi")]
    partial class mi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("App_Data.Models.Anh", b =>
                {
                    b.Property<string>("IdAnh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdSanPhamChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAnh");

                    b.HasIndex("IdSanPhamChiTiet");

                    b.ToTable("Anh");
                });

            modelBuilder.Entity("App_Data.Models.ChatLieu", b =>
                {
                    b.Property<string>("IdChatLieu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaChatLieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TenChatLieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdChatLieu");

                    b.ToTable("ChatLieus");
                });

            modelBuilder.Entity("App_Data.Models.ChucVu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaChucVu")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.GioHang", b =>
                {
                    b.Property<string>("IdNguoiDung")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<string>("NguoiDungId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdNguoiDung");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("gioHangs");
                });

            modelBuilder.Entity("App_Data.Models.GioHangChiTiet", b =>
                {
                    b.Property<string>("IdGioHangChiTiet")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("GiaGoc")
                        .HasColumnType("float");

                    b.Property<string>("IdNguoiDung")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdSanPhamCT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Soluong")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdGioHangChiTiet");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdSanPhamCT");

                    b.ToTable("gioHangChiTiets");
                });

            modelBuilder.Entity("App_Data.Models.HoaDon", b =>
                {
                    b.Property<string>("IdHoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdKhachHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNguoiDung")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdThongTinGH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdVoucher")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("NgayNhan")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("NgayShip")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("NgayThanhToan")
                        .HasColumnType("DateTime");

                    b.Property<double?>("TienGiam")
                        .HasColumnType("float");

                    b.Property<double?>("TienShip")
                        .HasColumnType("float");

                    b.Property<double?>("TongTien")
                        .HasColumnType("float");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThaiThanhToan")
                        .HasColumnType("int");

                    b.HasKey("IdHoaDon");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdThongTinGH");

                    b.HasIndex("IdVoucher");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("App_Data.Models.HoaDonChiTiet", b =>
                {
                    b.Property<string>("IdHoaDonChiTiet")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("GiaBan")
                        .HasColumnType("float");

                    b.Property<double?>("GiaGoc")
                        .HasColumnType("float");

                    b.Property<string>("IdHoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdSanPhamChiTiet")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdHoaDonChiTiet");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdSanPhamChiTiet");

                    b.ToTable("hoaDonChiTiets");
                });

            modelBuilder.Entity("App_Data.Models.KhachHang", b =>
                {
                    b.Property<string>("IdKhachHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdKhachHang");

                    b.HasIndex("IdNguoiDung");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("App_Data.Models.KhuyenMai", b =>
                {
                    b.Property<string>("IdKhuyenMai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("LoaiHinhKM")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("MaKhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("MucGiam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime");

                    b.Property<string>("PhamVi")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TenKhuyenMai")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdKhuyenMai");

                    b.ToTable("KhuyenMai", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.KhuyenMaiChiTiet", b =>
                {
                    b.Property<string>("IdKhuyenMaiChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("IdKhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("IdKhuyenMai");

                    b.Property<string>("IdSanPhamChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("IdSanPhamChiTiet");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdKhuyenMaiChiTiet");

                    b.HasIndex("IdKhuyenMai");

                    b.HasIndex("IdSanPhamChiTiet");

                    b.ToTable("KhuyenMaiChiTiet", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.KichCo", b =>
                {
                    b.Property<string>("IdKichCo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("MaKichCo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("SoKichCo")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdKichCo");

                    b.ToTable("kichCos");
                });

            modelBuilder.Entity("App_Data.Models.KieuDeGiay", b =>
                {
                    b.Property<string>("IdKieuDeGiay")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKieuDeGiay")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TenKieuDeGiay")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int");

                    b.HasKey("IdKieuDeGiay");

                    b.ToTable("kieuDeGiays");
                });

            modelBuilder.Entity("App_Data.Models.LoaiGiay", b =>
                {
                    b.Property<string>("IdLoaiGiay")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaLoaiGiay")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TenLoaiGiay")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdLoaiGiay");

                    b.ToTable("LoaiGiays");
                });

            modelBuilder.Entity("App_Data.Models.MauSac", b =>
                {
                    b.Property<string>("IdMauSac")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaMauSac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMauSac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdMauSac");

                    b.ToTable("mauSacs");
                });

            modelBuilder.Entity("App_Data.Models.NguoiDung", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaNguoiDung")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguoiDung")
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.PhuongThucThanhToan", b =>
                {
                    b.Property<string>("IdPhuongThucThanhToan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaPhuongThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TenPhuongThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdPhuongThucThanhToan");

                    b.ToTable("PhuongThucThanhToans");
                });

            modelBuilder.Entity("App_Data.Models.PhuongThucThanhToanChiTiet", b =>
                {
                    b.Property<string>("IdPhuongThucThanhToanChiTiet")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SoTien")
                        .HasColumnType("float");

                    b.HasKey("IdPhuongThucThanhToanChiTiet");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdThanhToan");

                    b.ToTable("phuongThucThanhToanChiTiets");
                });

            modelBuilder.Entity("App_Data.Models.SanPham", b =>
                {
                    b.Property<string>("IdSanPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int");

                    b.HasKey("IdSanPham");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("App_Data.Models.SanPhamChiTiet", b =>
                {
                    b.Property<string>("IdChiTietSp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(250)");

                    b.Property<double?>("GiaBan")
                        .HasColumnType("float");

                    b.Property<double?>("GiaNhap")
                        .HasColumnType("float");

                    b.Property<string>("IdChatLieu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdKichCo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdKieuDeGiay")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdLoaiGiay")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdMauSac")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdSanPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdThuongHieu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdXuatXu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ma")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MoTa")
                        .HasColumnType("Nvarchar(max)");

                    b.Property<int?>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThaiSale")
                        .HasColumnType("int");

                    b.HasKey("IdChiTietSp");

                    b.HasIndex("IdChatLieu");

                    b.HasIndex("IdKichCo");

                    b.HasIndex("IdKieuDeGiay");

                    b.HasIndex("IdLoaiGiay");

                    b.HasIndex("IdMauSac");

                    b.HasIndex("IdSanPham");

                    b.HasIndex("IdThuongHieu");

                    b.HasIndex("IdXuatXu");

                    b.ToTable("sanPhamChiTiets");
                });

            modelBuilder.Entity("App_Data.Models.SanPhamYeuThich", b =>
                {
                    b.Property<string>("IdSanPhamYeuThich")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("IdNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdSanPhamChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdSanPhamYeuThich");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdSanPhamChiTiet");

                    b.ToTable("sanPhamYeuThiches");
                });

            modelBuilder.Entity("App_Data.Models.ThongTinGiaoHang", b =>
                {
                    b.Property<string>("IdThongTinGH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("IdNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TenNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdThongTinGH");

                    b.HasIndex("IdNguoiDung");

                    b.ToTable("thongTinGiaoHangs");
                });

            modelBuilder.Entity("App_Data.Models.ThuongHieu", b =>
                {
                    b.Property<string>("IdThuongHieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("MaThuongHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdThuongHieu");

                    b.ToTable("thuongHieus");
                });

            modelBuilder.Entity("App_Data.Models.Voucher", b =>
                {
                    b.Property<string>("IdVoucher")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DieuKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LoaiHinhUuDai")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("MaVoucher")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("MucUuDai")
                        .HasColumnType("float");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenVoucher")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdVoucher");

                    b.ToTable("vouchers");
                });

            modelBuilder.Entity("App_Data.Models.VoucherNguoiDung", b =>
                {
                    b.Property<string>("IdVouCherNguoiDung")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdVouCher")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdVouCherNguoiDung");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdVouCher");

                    b.ToTable("voucherNguoiDungs");
                });

            modelBuilder.Entity("App_Data.Models.XuatXu", b =>
                {
                    b.Property<string>("IdXuatXu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdXuatXu");

                    b.ToTable("xuatXus");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.Anh", b =>
                {
                    b.HasOne("App_Data.Models.SanPhamChiTiet", "SanPhamChiTiets")
                        .WithMany("Anh")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("App_Data.Models.GioHang", b =>
                {
                    b.HasOne("App_Data.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("App_Data.Models.GioHangChiTiet", b =>
                {
                    b.HasOne("App_Data.Models.GioHang", "GioHang")
                        .WithMany("GioHangChiTiet")
                        .HasForeignKey("IdNguoiDung");

                    b.HasOne("App_Data.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("GioHangChiTiet")
                        .HasForeignKey("IdSanPhamCT");

                    b.Navigation("GioHang");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("App_Data.Models.HoaDon", b =>
                {
                    b.HasOne("App_Data.Models.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdNguoiDung");

                    b.HasOne("App_Data.Models.ThongTinGiaoHang", "ThongTinGiaoHang")
                        .WithMany("HoaDon")
                        .HasForeignKey("IdThongTinGH");

                    b.HasOne("App_Data.Models.Voucher", "Voucher")
                        .WithMany("HoaDon")
                        .HasForeignKey("IdVoucher");

                    b.Navigation("KhachHang");

                    b.Navigation("ThongTinGiaoHang");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("App_Data.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("App_Data.Models.HoaDon", "HoaDon")
                        .WithMany("HoaDonChiTiet")
                        .HasForeignKey("IdHoaDon");

                    b.HasOne("App_Data.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("HoaDonChiTiet")
                        .HasForeignKey("IdSanPhamChiTiet");

                    b.Navigation("HoaDon");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("App_Data.Models.KhachHang", b =>
                {
                    b.HasOne("App_Data.Models.NguoiDung", "NguoiDung")
                        .WithMany("KhachHangs")
                        .HasForeignKey("IdNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("App_Data.Models.KhuyenMaiChiTiet", b =>
                {
                    b.HasOne("App_Data.Models.KhuyenMai", "KhuyenMai")
                        .WithMany("KhuyenMaiChiTiet")
                        .HasForeignKey("IdKhuyenMai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Data.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("KhuyenMaiChiTiet")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhuyenMai");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("App_Data.Models.PhuongThucThanhToanChiTiet", b =>
                {
                    b.HasOne("App_Data.Models.HoaDon", "HoaDons")
                        .WithMany("PhuongThucThanhToanChiTiet")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Data.Models.PhuongThucThanhToan", "PhuongThucThanhToan")
                        .WithMany("PhuongThucThanhToanChiTiets")
                        .HasForeignKey("IdThanhToan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDons");

                    b.Navigation("PhuongThucThanhToan");
                });

            modelBuilder.Entity("App_Data.Models.SanPhamChiTiet", b =>
                {
                    b.HasOne("App_Data.Models.ChatLieu", "ChatLieu")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdChatLieu");

                    b.HasOne("App_Data.Models.KichCo", "KichCo")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdKichCo");

                    b.HasOne("App_Data.Models.KieuDeGiay", "KieuDeGiay")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdKieuDeGiay");

                    b.HasOne("App_Data.Models.LoaiGiay", "LoaiGiay")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdLoaiGiay");

                    b.HasOne("App_Data.Models.MauSac", "MauSac")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdMauSac");

                    b.HasOne("App_Data.Models.SanPham", "SanPham")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdSanPham");

                    b.HasOne("App_Data.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdThuongHieu");

                    b.HasOne("App_Data.Models.XuatXu", "XuatXu")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdXuatXu");

                    b.Navigation("ChatLieu");

                    b.Navigation("KichCo");

                    b.Navigation("KieuDeGiay");

                    b.Navigation("LoaiGiay");

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");

                    b.Navigation("ThuongHieu");

                    b.Navigation("XuatXu");
                });

            modelBuilder.Entity("App_Data.Models.SanPhamYeuThich", b =>
                {
                    b.HasOne("App_Data.Models.NguoiDung", "NguoiDung")
                        .WithMany("SanPhamYeuThich")
                        .HasForeignKey("IdNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Data.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("SanPhamYeuThichs")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("App_Data.Models.ThongTinGiaoHang", b =>
                {
                    b.HasOne("App_Data.Models.NguoiDung", "NguoiDungs")
                        .WithMany("ThongTinGiaoHangs")
                        .HasForeignKey("IdNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDungs");
                });

            modelBuilder.Entity("App_Data.Models.VoucherNguoiDung", b =>
                {
                    b.HasOne("App_Data.Models.NguoiDung", "NguoiDungs")
                        .WithMany("VoucherNguoiDungs")
                        .HasForeignKey("IdNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Data.Models.Voucher", "Vouchers")
                        .WithMany("VoucherNguoiDungs")
                        .HasForeignKey("IdVouCher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDungs");

                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("App_Data.Models.ChucVu", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("App_Data.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("App_Data.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("App_Data.Models.ChucVu", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Data.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("App_Data.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App_Data.Models.ChatLieu", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("App_Data.Models.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiet");
                });

            modelBuilder.Entity("App_Data.Models.HoaDon", b =>
                {
                    b.Navigation("HoaDonChiTiet");

                    b.Navigation("PhuongThucThanhToanChiTiet");
                });

            modelBuilder.Entity("App_Data.Models.KhachHang", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("App_Data.Models.KhuyenMai", b =>
                {
                    b.Navigation("KhuyenMaiChiTiet");
                });

            modelBuilder.Entity("App_Data.Models.KichCo", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("App_Data.Models.KieuDeGiay", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("App_Data.Models.LoaiGiay", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("App_Data.Models.MauSac", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("App_Data.Models.NguoiDung", b =>
                {
                    b.Navigation("KhachHangs");

                    b.Navigation("SanPhamYeuThich");

                    b.Navigation("ThongTinGiaoHangs");

                    b.Navigation("VoucherNguoiDungs");
                });

            modelBuilder.Entity("App_Data.Models.PhuongThucThanhToan", b =>
                {
                    b.Navigation("PhuongThucThanhToanChiTiets");
                });

            modelBuilder.Entity("App_Data.Models.SanPham", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("App_Data.Models.SanPhamChiTiet", b =>
                {
                    b.Navigation("Anh");

                    b.Navigation("GioHangChiTiet");

                    b.Navigation("HoaDonChiTiet");

                    b.Navigation("KhuyenMaiChiTiet");

                    b.Navigation("SanPhamYeuThichs");
                });

            modelBuilder.Entity("App_Data.Models.ThongTinGiaoHang", b =>
                {
                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("App_Data.Models.ThuongHieu", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("App_Data.Models.Voucher", b =>
                {
                    b.Navigation("HoaDon");

                    b.Navigation("VoucherNguoiDungs");
                });

            modelBuilder.Entity("App_Data.Models.XuatXu", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });
#pragma warning restore 612, 618
        }
    }
}
